############### EX 1 ###############

function findInfluencer(network : 2dArray) : int
    influencer = -1 : int
    for row=0 to length(network) do
        check = true : bool
        for col to length(network) do
            if network[row][col]==1 then
                check = false
            endif
        endfor
        if check then
            break
        endif
    endfor
    return influencer
endfunction

################ EX 2 ####################

function connexionDegree(network:Graph, source:Node, target:Node) : int
    queue = [[source, 0]] : List #each item in the queue has the structure [Node Object, Distance from source]
    visited = () : Set #each item in the set should have the structure [Node Object, Distance from source]
    while length(queue) > 0 do
        currentNode = queue.pop()
        if currentNode[0]==target then
            if currentNode[1]>3 then
                return -1
            else then
                return currentNode[1]
            endif
        else then
            newNodes = currentNode[0].children() #returns a list of Node objects that are connected to the currentNode
            for i=0 to length(queue) do
                if not (newNodes[i] in visited) then
                    queue.push([newNodes[i], currentNode[1]+1])
                endif
            endfor
            visited.add(currentNode)
        endif
    endwhile
endfunction